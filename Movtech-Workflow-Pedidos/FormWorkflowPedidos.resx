<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colPedido.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDataEmissao.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDataEntrega.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colNomeCliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colNomeProduto.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colQuantidade.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colQtdTipos.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colValorUnit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colValorTotal.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colCodEmpresa.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXDIcJGY+
        KtpYLhn/UyoW71YsGfVYLhn/YzsmvlotFyIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//+AAmxDLmNVKhX/XTIc93hPPEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>